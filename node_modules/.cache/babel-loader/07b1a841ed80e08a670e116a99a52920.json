{"ast":null,"code":"var _jsxFileName = \"/Users/nnho/Desktop/DeployApp/chatApp/sweetthyme/src/components/MessageForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\nimport { sendMessage, isTyping } from 'react-chat-engine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageForm = props => {\n  _s();\n\n  const [value, setValue] = useState('');\n  const {\n    chatId,\n    creds\n  } = props;\n  let oldInput = '';\n  setTimeout(() => {\n    localStorage.removeItem('isTyping');\n  }, 1000);\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    isTyping(props, chatId);\n\n    if (oldInput.length < event.target.value.length) {\n      localStorage.setItem('isTyping', true);\n    }\n\n    oldInput = event.target.value;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, {\n        text\n      });\n    }\n\n    setValue('');\n  };\n\n  const handleUpload = event => {\n    sendMessage(creds, chatId, {\n      files: event.target.files,\n      text: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"message-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"message-input\",\n      placeholder: \"Send a message...\",\n      value: value,\n      onChange: handleChange,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"upload-button\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"image-button\",\n        children: /*#__PURE__*/_jsxDEV(PictureOutlined, {\n          className: \"picture-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: false,\n      id: \"upload-button\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleUpload.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"send-button\",\n      children: /*#__PURE__*/_jsxDEV(SendOutlined, {\n        className: \"send-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isTyping(props, chatId)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageForm, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c = MessageForm;\nexport default MessageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"sources":["/Users/nnho/Desktop/DeployApp/chatApp/sweetthyme/src/components/MessageForm.jsx"],"names":["useState","SendOutlined","PictureOutlined","sendMessage","isTyping","MessageForm","props","value","setValue","chatId","creds","oldInput","setTimeout","localStorage","removeItem","handleChange","event","target","length","setItem","handleSubmit","preventDefault","text","trim","handleUpload","files","display","bind"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\nimport { sendMessage, isTyping } from 'react-chat-engine';\n\nconst MessageForm = (props) => {\n  const [value, setValue] = useState('');\n  const { chatId, creds } = props;\n  let oldInput = ''\n\n  setTimeout(() => {\n    localStorage.removeItem('isTyping')\n  }, 1000);\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    \n    isTyping(props, chatId);\n    if(oldInput.length < event.target.value.length){\n      localStorage.setItem('isTyping', true);\n    }\n    oldInput = event.target.value;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, { text });\n    }\n\n    setValue('');\n  };\n\n  const handleUpload = (event) => {\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\n  };\n\n  return (\n    <form className=\"message-form\" onSubmit={handleSubmit}>\n      <input\n        className=\"message-input\"\n        placeholder=\"Send a message...\"\n        value={value}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n      <label htmlFor=\"upload-button\">\n        <span className=\"image-button\">\n          <PictureOutlined className=\"picture-icon\" />\n        </span>\n      </label>\n      <input\n        type=\"file\"\n        multiple={false}\n        id=\"upload-button\"\n        style={{ display: 'none' }}\n        onChange={handleUpload.bind(this)}\n      />\n      <button type=\"submit\" className=\"send-button\">\n        <SendOutlined className=\"send-icon\" />\n      </button>\n      <p>\n        {isTyping(props, chatId)}\n      </p>\n    </form>\n  );\n};\n\nexport default MessageForm;\n"]},"metadata":{},"sourceType":"module"}