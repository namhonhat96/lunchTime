{"ast":null,"code":"var _jsxFileName = \"/Users/nnho/Desktop/DeployApp/chatApp/sweetthyme/src/components/ChatFeed.js\";\nimport MessageForm from './MessageForm';\nimport MyMessage from './MyMessage';\nimport TheirMessage from './TheirMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatFeed = props => {\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  const chat = chats && chats[activeChat];\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = message[key];\n      const lastMessageKey = index === 0 ? null : key[index - 1];\n      const isMessage = userName === message.sender.userName;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        }\n      }, `msg_${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ChatFeed\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChatFeed;\nexport default ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["/Users/nnho/Desktop/DeployApp/chatApp/sweetthyme/src/components/ChatFeed.js"],"names":["MessageForm","MyMessage","TheirMessage","ChatFeed","props","chats","activeChat","userName","messages","chat","renderMessages","keys","Object","map","key","index","message","lastMessageKey","isMessage","sender","width"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAS;AACtB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,MAA2CJ,KAAjD;AACA,QAAMK,IAAI,GAAGJ,KAAK,IAAIA,KAAK,CAACC,UAAD,CAA3B;;AAEA,QAAMI,cAAc,GAAG,MAAK;AACxB,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,QAAZ,CAAb;AACA,WAAOG,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAKC,KAAL,KAAa;AACzB,YAAMC,OAAO,GAAGA,OAAO,CAACF,GAAD,CAAvB;AACA,YAAMG,cAAc,GAAGF,KAAK,KAAK,CAAV,GAAc,IAAd,GAAqBD,GAAG,CAACC,KAAK,GAAC,CAAP,CAA/C;AACA,YAAMG,SAAS,GAAGX,QAAQ,KAAKS,OAAO,CAACG,MAAR,CAAeZ,QAA9C;AACA,0BACI;AAA4B,QAAA,KAAK,EAAE;AAACa,UAAAA,KAAK,EAAE;AAAR;AAAnC,SAAa,OAAML,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KATM,CAAP;AAUH,GAZD;;AAcA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;KAAMZ,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import MessageForm from './MessageForm'\nimport MyMessage from './MyMessage'\nimport TheirMessage from './TheirMessage'\n\nconst ChatFeed = (props)=>{\n    const { chats, activeChat, userName, messages} = props;\n    const chat = chats && chats[activeChat];\n\n    const renderMessages = () =>{\n        const keys = Object.keys(messages);\n        return keys.map((key,index)=>{\n            const message = message[key];\n            const lastMessageKey = index === 0 ? null : key[index-1];\n            const isMessage = userName === message.sender.userName;\n            return (\n                <div key = {`msg_${index}`} style={{width: '100%'}}>\n                    \n                </div>\n            );\n        })\n    }\n\n    return (\n        <div>\n            ChatFeed\n        </div>\n    );\n}\n\nexport default ChatFeed"]},"metadata":{},"sourceType":"module"}